name: ci
on: push

jobs:
  readme-only:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder:
          - cookbook/serialization
          - cookbook/grid
          - cookbook/sql-dump
          - cookbook/variable-number-of-products
          - guides/debugging
          - guides/sql-templating
          - guides/logging
          - guides/testing
          - guides/serialization
          - templates/mlflow
          - templates/spec-api-directory
          - templates/ml-intermediate
          - templates/spec-api-sql
          - templates/ml-advanced
    env:
      FOLDER: ${{ matrix.folder }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - run: |
          eval "$(conda shell.bash hook)"
          conda env create --file $FOLDER/environment.yml --name env
          conda activate env
          pip install invoke ipywidgets pkg/

          if [ -f "$FOLDER/setup.py" ]; then
            echo "Found setup.py, installing package..."
            pip install $FOLDER/
          fi

          # test readme.md
          invoke build --name $FOLDER

          # TODO: export to argo and validate
          # ploomberutils validate-argo argo.yaml


  python-api-examples:
    runs-on: ubuntu-latest
    name: python-api-examples
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - run: |
          # for the tests that depend on git repos
          git config --global user.email "someone@example.com"
          git config --global user.name "Someone"

          cd python-api-examples
          eval "$(conda shell.bash hook)"
          conda create --name env python=3.9 pygraphviz -c conda-forge --yes
          conda activate env
          pip install -r requirements.txt
          pytest

  # These are examples with the same structure, we use the same script
  projects:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder:
          # basic
          - templates/ml-basic
          - templates/spec-api-r
          #  intermediate
          - templates/python-api
          # advanced
          - templates/etl
          # guides
          - guides/parametrized
          - guides/spec-api-python
    env:
      FOLDER: ${{ matrix.folder }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - run: |
          pip install pkg/
          pip install invoke ipywidgets
          # some readmes require pygraphviz
          conda install pygraphviz -c conda-forge --yes

          eval "$(conda shell.bash hook)"
          conda env create --file $FOLDER/environment.yml --name env
          conda activate env

          if [ -f "$FOLDER/setup.py" ]; then
            echo "Found setup.py, installing package..."
            pip install $FOLDER/
          fi

          # test readme.md
          invoke build --name $FOLDER

          # NOTE: i dont think we need this anymore
          cd $FOLDER
          ploomber build

  # The rest have some particular details, so we test them separately
  ml-online:
    runs-on: ubuntu-latest
    name: ml-online
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - run: |
          # install ploomberutils
          pip install pkg/
          pip install invoke

          pip install -e "templates/ml-online[dev]"

          invoke build --name templates/ml-online

          # TODO: export to argo
          # validate argo spec
          # ploomberutils validate-argo argo.yaml
          # TODO: export to airflow
